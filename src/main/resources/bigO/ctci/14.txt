Exercise #14
************

void allFib(int n) {
    for (int i = 0; i < n; i++) {
        System.out.println(i + ": " + fib(i));
    }
}

int fib(int n) {
    if (n <= 0) return 0;
    else if (n == 1) return 1;
    return fib(n - 1) + fib(n - 2);
}

Solution
********

Time Complexity:
complexity for fib() is O(2 ^ n)
allFib is walking through n numbers
for each number, we invoke fib() thus:
if n = 3 =>

f(0) => 0
f(1) => 1
f(2)
    f(1) => 1
    f(0) => 0
f(3)
    f(2)
        f(1) => 1
        f(0) => 0
    f(1) => 1

=> O + 1 + 2 + ... + 2 ^ n = 2 ^ (n + 1) = O(2 ^ n)


Space Complexity: O(n)
